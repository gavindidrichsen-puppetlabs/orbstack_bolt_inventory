#!/usr/bin/env ruby
# frozen_string_literal: true

require 'orbstack_bolt_inventory'
require 'psych'  # Using Psych directly for better YAML formatting control
require 'optparse'

options = { group_patterns: [] }

# Parse command line options
OptionParser.new do |opts|
  opts.banner = 'Usage: orby [options]'

  opts.on('-g', '--groups "NAME:REGEX,NAME2:REGEX2"', Array,
          'Group patterns (format: groupname:regex, comma-separated)') do |patterns|
    options[:group_patterns] = patterns.map do |pattern|
      group, regex = pattern.split(':', 2)
      { 'group' => group, 'regex' => regex }
    end
  end
end.parse!

# Create an instance of your inventory class with the group patterns
inventory = OrbstackBoltInventory::Inventory.new({ 'group_patterns' => options[:group_patterns] })

# Generate the inventory
inventory_data = inventory.generate

# Output as YAML using Psych for proper formatting
# See ADR-0006 for why we use Psych instead of YAML
Psych.dump(inventory_data, 
          indentation: 2,          # Use 2-space indentation
          line_width: -1,          # Prevent line wrapping
          block_style: true,       # Use block style for arrays (YAML 1.2 compliant)
          out: $stdout)
